!function(){"use strict";const e=document.querySelector("#profile-title-input"),t=document.querySelector("#profile-description-input"),s=document.querySelector("#profile-edit-button"),n=document.querySelector("#card-add-button"),r=document.forms["new-card-form"],i=document.forms["profile-edit-form"],o={inputSelector:".modal__input",submitButtonSelector:".modal__save-btn",inactiveButtonClass:"modal__save-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var a=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError=e=>{const t=this._formElement.querySelector(`#${e.id}-error`);t.textContent=e.validationMessage,e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass)};_hideInputError=e=>{const t=this._formElement.querySelector(`#${e.id}-error`);t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)};_checkInputValidity=e=>{if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)};_hasInvalidInput=e=>e.some((e=>!e.validity.valid));disableButton=()=>{this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0};_enableButton=()=>{this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1};toggleButtonState=()=>{this._hasInvalidInput(this._inputList)?this.disableButton():this._enableButton()};_setEventListeners=()=>{this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))};enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}},l=class{constructor(e,t){let{data:s,handleImageClick:n}=e;this._name=s.name,this._link=s.link,this._cardSelector=t,this._handleImageClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}generateCard(){this._element=this._getTemplate(),this._setEventListeners();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__title");return e.setAttribute("src",this._link),t.setAttribute("alt",this._name),t.textContent=this._name,this._element}_setEventListeners(){const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__like-button"),s=this._element.querySelector(".card__delete-button");e.addEventListener("click",(()=>{this._handleImageClick({name:this._name,src:this._link})})),t.addEventListener("click",this._handleLikeIcon),s.addEventListener("click",this._handleDeleteCard)}_handleLikeIcon(e){e.target.classList.toggle("card__like-button_active")}_handleDeleteCard(e){e.target.closest(".card").remove()}},c=class{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose(e){e.preventDefault(),"Escape"!==e.key&&"Esc"!==e.key||this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}},u=class extends c{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=s}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}))}};const m=new class{constructor(e){let{userNameSelector:t,userDescriptionSelector:s}=e;this._userName=document.querySelector(t),this._userDescription=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,description:this._userDescription.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._userName.textContent=t,this._userDescription.textContent=s}}({userNameSelector:"#profile-title",userDescriptionSelector:".profile__description"}),d=new class extends c{constructor(e){super(e),this._imageElement=this._popupElement.querySelector(".modal__image"),this._imageCaption=this._popupElement.querySelector(".modal__caption")}open(e){this._imageElement.src=e.link,this._imageElement.alt=`Image ${e.name}`,this._imageCaption.textContent=e.name,super.open()}}({popupSelector:"#image-preview-modal"}),p=new u({popupSelector:"#profile-edit-modal",handleFormSubmit:e=>{m.setUserInfo({name:e.title,description:e.description}),p.close()}}),_=new u({popupSelector:"#profile-add-card-modal",handleFormSubmit:e=>{const t=E({name:e.title,link:e.url});h.addItem(t),_.close(),v.disableButton()}}),h=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._element=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._element.prepend(e)}}({renderer:e=>{const t=E(e);h.addItem(t)}},".cards__list"),E=e=>new l({data:e,handleImageClick:()=>{d.open(e)}},"#card-template").generateCard();p.setEventListeners(),_.setEventListeners(),d.setEventListeners(),h.renderItems([{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:" Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}]),n.addEventListener("click",(()=>_.open())),s.addEventListener("click",(()=>{const s=m.getUserInfo();e.value=s.name,t.value=s.description,p.open()}));const v=new a(o,r);v.enableValidation(),new a(o,i).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,